/*
 * This file was generated by the Gradle 'init' task.
 */
plugins {
    id "io.freefair.lombok" version "3.7.4"
}


allprojects {
    group = 'com.ztianzeng.apidoc'
    version = '0.0.2'
}

subprojects {

    apply plugin: 'java'
    apply plugin: 'maven-publish'
    apply plugin: 'maven'
    apply plugin: 'io.freefair.lombok'

    repositories {
        jcenter()
        mavenLocal()
        maven {
            url = 'http://repo.maven.apache.org/maven2'
        }
    }
   
    def localMavenRepo = 'file://' + new File(System.getProperty('user.home'), '.m2/repository').absolutePath

// 上传Task，Gradle会生成并上传pom.xml文件。
    uploadArchives {
        repositories {
            mavenDeployer {
                repository(url: localMavenRepo)

                //构造项目的Pom文件
                pom.project {
                    name = project.name
                    packaging = 'jar'
                    description = 'description'
                }
            }

        }
    }

    dependencies {
        implementation 'org.apache.commons:commons-lang3:3.8.1'
        implementation 'com.thoughtworks.qdox:qdox:2.0-M10'
        implementation group: 'com.fasterxml.jackson.core', name: 'jackson-annotations', version: '2.9.7'
        implementation 'com.fasterxml.jackson.core:jackson-databind:2.9.9'
        implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.9.8'
        implementation 'org.slf4j:slf4j-api:1.7.26'

        testImplementation 'junit:junit:4.12'
        testCompile 'org.hibernate.validator:hibernate-validator:6.0.16.Final'
        testCompile 'org.springframework:spring-web:5.0.10.RELEASE'
        
    }

    task sourcesJar(type: Jar) {
        classifier = 'sources'
        from(sourceSets.main.allJava)
    }

    sourceCompatibility = '1.8'

    configurations.all {
    }

    publishing {
        publications {
            maven(MavenPublication) {
                from(components.java)
                artifact(sourcesJar)
            }
        }
    }

    tasks.withType(JavaCompile) {
        options.encoding = 'UTF-8'
    }
    test {
        useJUnit()

        maxHeapSize = '1G'
    }
}

